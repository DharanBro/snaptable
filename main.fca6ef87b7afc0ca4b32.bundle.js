(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{263:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Cell=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(264));function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default=class Row{constructor(row){_defineProperty(this,"isHeader",void 0),_defineProperty(this,"rowHeight",void 0),_defineProperty(this,"columns",void 0),_defineProperty(this,"rowSpan",void 0),this.isHeader=!1,this.rowHeight=15,this.columns=[],row&&(Array.isArray(row)?row.forEach(col=>{this.addColumn(col)}):(this.isHeader=row.isHeader,this.rowHeight=row.rowHeight,this.columns=row.columns,this.rowSpan=row.rowSpan))}addColumn(column){column instanceof _Cell.default?this.columns.push(column):this.columns.push(new _Cell.default(column))}}},264:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _colors=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(265));function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default=class Cell{constructor(cell,isHeaderCell=!1){_defineProperty(this,"background",void 0),_defineProperty(this,"color",void 0),_defineProperty(this,"text",void 0),_defineProperty(this,"truncatedText",void 0),"string"==typeof cell?(this.background=_colors.default.WHITE,this.color=_colors.default.DARK_GREY,this.text=cell):(this.text=cell.text,this.background=cell.background,this.color=cell.color),isHeaderCell&&(this.background=_colors.default.STEEL_BLUE,this.color=_colors.default.WHITE)}setTruncatedText(text){this.truncatedText=text}}},265:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;exports.default={WHITE:"#ffffff",DARK_GREY:"#333333",STEEL_BLUE:"#4681B4"}},267:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;class UnitHelper{static getDocumentUnit(scaleFactor){for(let unit in UnitHelper.UNIT_SCALE_MAP)if(UnitHelper.UNIT_SCALE_MAP[unit]===scaleFactor)return unit;throw new Error("Invalid unit / scale factor. This could probably as a result of change in JsPDF")}static pxToDocumentUnit(value,scaleFactor){const documentUnit=UnitHelper.getDocumentUnit(scaleFactor);return value/UnitHelper.UNIT_SCALE_MAP.px*UnitHelper.UNIT_SCALE_MAP[documentUnit]}static documentUnitToPx(value,scaleFactor){const documentUnit=UnitHelper.getDocumentUnit(scaleFactor);return value/UnitHelper.UNIT_SCALE_MAP[documentUnit]*UnitHelper.UNIT_SCALE_MAP.px}static documentUnitToPt(value,scaleFactor){const documentUnit=UnitHelper.getDocumentUnit(scaleFactor);return value/UnitHelper.UNIT_SCALE_MAP[documentUnit]}static convertToPt(value,scaleFactor){const documentUnit=UnitHelper.getDocumentUnit(scaleFactor);return value/UnitHelper.UNIT_SCALE_MAP[documentUnit]}static converToDocumentUnit(value,scaleFactor){const documentUnit=UnitHelper.getDocumentUnit(scaleFactor);return value/UnitHelper.UNIT_SCALE_MAP.pt*UnitHelper.UNIT_SCALE_MAP[documentUnit]}static convertPtToPx(value){return value*UnitHelper.UNIT_SCALE_MAP.px}static convertPxToPt(value){return value/UnitHelper.UNIT_SCALE_MAP.px}}exports.default=UnitHelper,function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(UnitHelper,"UNIT_SCALE_MAP",{mm:2.834645669291339,pt:1,cm:28.346456692913385,in:72,px:1.3333333333333333})},268:function(module,exports,__webpack_require__){__webpack_require__(269),__webpack_require__(415),module.exports=__webpack_require__(416)},333:function(module,exports){},416:function(module,exports,__webpack_require__){"use strict";(function(module){var _html=__webpack_require__(205);module._StorybookPreserveDecorators=!0,(0,_html.configure)([__webpack_require__(605)],module)}).call(this,__webpack_require__(54)(module))},605:function(module,exports,__webpack_require__){var map={"./sample.stories.js":606};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=605},606:function(module,exports,__webpack_require__){"use strict";var _html=__webpack_require__(205);__webpack_require__(607);var _jspdf=_interopRequireDefault(__webpack_require__(611)),_index=_interopRequireDefault(__webpack_require__(612)),_simple=__webpack_require__(620),_columnSplit=__webpack_require__(621),_contentCrop=__webpack_require__(622),_customCellConfig=__webpack_require__(623);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function generatePDF(data){const root=document.createElement("div");root.setAttribute("class","root"),root.style.width="100%",root.style.height="100%";const obj=document.createElement("object");obj.setAttribute("width","100%"),obj.setAttribute("height","100%");var doc=new _jspdf.default;new _index.default(doc).writeTable(data);var outputString=doc.output("datauristring");const embed=document.createElement("embed");return embed.setAttribute("width","100%"),embed.setAttribute("height","100%"),embed.setAttribute("src",outputString),obj.appendChild(embed),root.appendChild(obj),root}(0,_html.storiesOf)("Demo").add("Simple",()=>generatePDF(_simple.data)),(0,_html.storiesOf)("Demo").add("Column Split",()=>generatePDF(_columnSplit.data)),(0,_html.storiesOf)("Demo").add("Crop Content",()=>generatePDF(_contentCrop.data)),(0,_html.storiesOf)("Demo").add("Custom Cell",()=>generatePDF(_customCellConfig.data))},607:function(module,exports,__webpack_require__){var api=__webpack_require__(608),content=__webpack_require__(609);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1},exported=(api(content,options),content.locals?content.locals:{});module.exports=exported},609:function(module,exports,__webpack_require__){(exports=__webpack_require__(610)(!1)).push([module.i,"html {\n    height: 100%;\n}\n\nbody {\n    height: calc(100% - 16px);\n}\n\n#root {\n    height: 100%;\n}",""]),module.exports=exports},612:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(613)).default;exports.default=_default},613:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Page=_interopRequireDefault(__webpack_require__(614)),_stringPixelWidth=_interopRequireDefault(__webpack_require__(266)),_Row=_interopRequireDefault(__webpack_require__(263)),_colors=_interopRequireDefault(__webpack_require__(265)),_JspdfUtils=_interopRequireDefault(__webpack_require__(618)),_lodash=_interopRequireDefault(__webpack_require__(619)),_Cell=_interopRequireDefault(__webpack_require__(264)),_UnitHelper=_interopRequireDefault(__webpack_require__(267));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}exports.default=class SnapTable{constructor(doc,configuration){_defineProperty(this,"doc",void 0),_defineProperty(this,"columnWidth",[]),_defineProperty(this,"mergedConfiguration",void 0),_defineProperty(this,"documentProperties",void 0),_defineProperty(this,"internalConfig",{cellPadding:{left:2,right:4},headerHeight:15,rowHeight:15,fontSize:12}),_defineProperty(this,"configuration",{pageNumber:{enabled:!1,hPosition:"RIGHT",vPosition:"BOTTOM"},margin:{left:10,right:10,top:10,bottom:10},borderColor:_colors.default.DARK_GREY}),this.doc=doc;const currentPageInfo=this.doc.internal.getCurrentPageInfo();let pageWidth=currentPageInfo.pageContext.mediaBox.topRightX,pageHeight=currentPageInfo.pageContext.mediaBox.topRightY;const scaleFactor=doc.internal.scaleFactor;this.documentProperties={pageWidth:pageWidth,pageHeight:pageHeight,scaleFactor:scaleFactor},this.mergedConfiguration=(0,_lodash.default)({},this.configuration,configuration,this.internalConfig)}populatePagesAndColumnWidth(data){const _this$mergedConfigura=this.mergedConfiguration,margin=_this$mergedConfigura.margin,rowHeight=_this$mergedConfigura.rowHeight,headerHeight=_this$mergedConfigura.headerHeight,cellPadding=_this$mergedConfigura.cellPadding,fontSize=_this$mergedConfigura.fontSize,pageHeight=this.documentProperties.pageHeight,pages=[];let header;header=data.head.map(cell=>new _Cell.default(cell,!0));const rows=data.body;let contentHeight=headerHeight;const _ref=margin,topMargin=_ref.top,bottomMargin=_ref.bottom,_ref2=cellPadding,rightPadding=_ref2.right,leftPadding=_ref2.left;let page=new _Page.default(this.doc,this.documentProperties,this.mergedConfiguration,header);pages.push(page);for(let i=0;i<rows.length;i++){const row=new _Row.default(rows[i]),currentRowHeight=row.rowHeight||rowHeight,columns=row.columns;if(header.length!==columns.length)throw new Error("Inconsistent data: Number of headers doesn't match with all rows in content");for(let j=0;j<columns.length;j++){const column=columns[j],textWidth=(0,_stringPixelWidth.default)(column.text,{size:fontSize}),width=_UnitHelper.default.convertPxToPt(textWidth)+rightPadding+leftPadding;void 0!==this.columnWidth[j]?width>this.columnWidth[j]&&(this.columnWidth[j]=width):this.columnWidth[j]=width}contentHeight+=currentRowHeight,contentHeight>pageHeight-topMargin-bottomMargin-headerHeight&&(contentHeight=0,page=new _Page.default(this.doc,this.documentProperties,this.mergedConfiguration,header),pages.push(page)),page.addRow(row)}return pages}writeTable(data){const pages=this.populatePagesAndColumnWidth(data);for(let i=0;i<pages.length;i++)pages[i].setColumnWidth(this.columnWidth),pages[i].writeToPdf();const currentPage=_JspdfUtils.default.getCurrentPageNumber(this.doc);this.doc.deletePage(currentPage)}}},614:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Row=_interopRequireDefault(__webpack_require__(263)),_Utils=_interopRequireDefault(__webpack_require__(615)),_UnitHelper=_interopRequireDefault(__webpack_require__(267));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class Page{constructor(doc,documentProps,configuration,header){_defineProperty(this,"columnWidth",void 0),_defineProperty(this,"header",void 0),_defineProperty(this,"rows",void 0),_defineProperty(this,"doc",void 0),_defineProperty(this,"mergedConfig",void 0),_defineProperty(this,"documentProperties",void 0),this.columnWidth=[],this.rows=[],this.doc=doc,this.header=header||[],this.mergedConfig=configuration,this.documentProperties=documentProps}setHeaders(header){this.header=header}setColumnWidth(columnWidth){this.columnWidth=[...columnWidth]}getColumnPositions(){let start=this.mergedConfig.margin.left;return this.columnWidth.map(width=>{const position=start;return start+=width,position})}shouldSplitColumns(columnPosition){for(let i=0;i<columnPosition.length;i++)if(columnPosition[i]+this.columnWidth[i]>this.documentProperties.pageWidth)return!0;return!1}getColumnSplittedPages(){const _this$mergedConfig=this.mergedConfig,margin=_this$mergedConfig.margin,cellPadding=_this$mergedConfig.cellPadding,fontSize=_this$mergedConfig.fontSize,_ref2=margin,leftMargin=_ref2.left,rightMargin=_ref2.right,_ref3=cellPadding,leftPadding=_ref3.left,rightPadding=_ref3.right,columnPosition=this.getColumnPositions(),pages=[],page=new Page(this.doc,this.documentProperties,this.mergedConfig);pages.push(page);for(let i=0;i<this.rows.length;i++){let pageIndex=0,row=new _Row.default;row.addColumn(this.rows[i].columns[0]);let columnWidth=[this.columnWidth[0]],header=[this.header[0]];const firstCellWidth=this.columnWidth[0];let columnPos=columnPosition[0]+this.columnWidth[0]+leftMargin;const availableWidth=this.documentProperties.pageWidth-firstCellWidth-leftMargin-rightMargin;for(let j=1;j<columnPosition.length;j++){const column=this.rows[i].columns[j];if(columnPos+this.columnWidth[j]>availableWidth)if(1!==j){if(pages[pageIndex].addRow(row),pages[pageIndex].setHeaders(header),pages[pageIndex].setColumnWidth(columnWidth),pageIndex++,!pages[pageIndex]){const page=new Page(this.doc,this.documentProperties,this.mergedConfig);pages[pageIndex]=page}columnPos=firstCellWidth,row=new _Row.default,row.addColumn(this.rows[i].columns[0]),header=[this.header[0]],columnWidth=[this.columnWidth[0]]}else{this.columnWidth[j]=availableWidth-rightMargin;let modifiedColumnWidth=this.columnWidth[j];const modifiedColumnWidthPx=_UnitHelper.default.convertPtToPx(modifiedColumnWidth-leftPadding-rightPadding),truncatedText=_Utils.default.trauncateText(column.text,fontSize,modifiedColumnWidthPx);column.setTruncatedText(truncatedText)}columnPos+=this.columnWidth[j],row.addColumn(column),header.push(this.header[j]),columnWidth.push(this.columnWidth[j])}pages[pageIndex].addRow(row),pages[pageIndex].setHeaders(header),pages[pageIndex].setColumnWidth(columnWidth)}return pages}writeCell(cell,cellIndex,columnPosition,rowPosition){let leftPadding=this.mergedConfig.cellPadding.left;const x=columnPosition[cellIndex],y=rowPosition,rightMargin=this.mergedConfig.margin.right,_this$documentPropert=this.documentProperties,scaleFactor=_this$documentPropert.scaleFactor,pageWidth=_this$documentPropert.pageWidth;this.doc.setFillColor(cell.background),this.doc.setDrawColor(this.mergedConfig.borderColor),this.doc.setTextColor(cell.color),((x,y,cellWidth,style="S")=>{this.doc.setLineWidth(_UnitHelper.default.documentUnitToPt(1,scaleFactor));const xPos=_UnitHelper.default.documentUnitToPt(x,scaleFactor),yPos=_UnitHelper.default.documentUnitToPt(y,scaleFactor),width=_UnitHelper.default.documentUnitToPt(cellWidth,scaleFactor),height=_UnitHelper.default.documentUnitToPt(this.mergedConfig.rowHeight,scaleFactor);this.doc.rect(xPos,yPos,width,height,style)})(x,y,(columnIndex=>(columnIndex=>columnPosition.length===columnIndex+1)(columnIndex)?pageWidth-rightMargin-columnPosition[columnIndex]:this.columnWidth[columnIndex])(cellIndex),"FD"),((text,x,y,options)=>{const xPos=_UnitHelper.default.documentUnitToPt(x,scaleFactor),yPos=_UnitHelper.default.documentUnitToPt(y,scaleFactor);this.doc.text(text,xPos,yPos,options)})(cell.truncatedText||cell.text,x+leftPadding,y+this.mergedConfig.rowHeight/2,{lineHeightFactor:0,baseline:"middle"})}writeContentRow(row,rowIndex,columnPosition){const _this$mergedConfig2=this.mergedConfig,margin=_this$mergedConfig2.margin,headerHeight=_this$mergedConfig2.headerHeight,y=_this$mergedConfig2.rowHeight*rowIndex+margin.top+headerHeight,columns=row.columns;for(let j=0;j<columns.length;j++){const column=columns[j];this.writeCell(column,j,columnPosition,y)}}writeHeader(columnPosition){const y=this.mergedConfig.margin.top;for(let i=0;i<this.header.length;i++){columnPosition[i];const column=this.header[i];this.writeCell(column,i,columnPosition,y)}}writeToPdf(){if(0===this.columnWidth.length)throw new Error("Column width not available: Did you forget to call page.setColumnWidth()?");let fontSize=this.mergedConfig.fontSize;const columnPosition=this.getColumnPositions();if(this.shouldSplitColumns(columnPosition)){const pages=this.getColumnSplittedPages();for(let i=0;i<pages.length;i++)pages[i].writeToPdf()}else{fontSize=_UnitHelper.default.convertPxToPt(fontSize),this.doc.setFontSize(fontSize),this.writeHeader(columnPosition);for(let j=0;j<this.rows.length;j++){const row=this.rows[j];this.writeContentRow(row,j,columnPosition)}this.doc.addPage()}}addRow(row){row instanceof _Row.default?this.rows.push(row):this.rows.push(new _Row.default(row))}}exports.default=Page},615:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _stringPixelWidth=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(266));exports.default=class Utils{static trauncateText(text,fontSize,width){let availableWidth=width,widthSum=(0,_stringPixelWidth.default)("...",{size:fontSize}),i=0,truncatedText="";for(;i<text.length&&(truncatedText=truncatedText.concat(text.charAt(i)),widthSum=(0,_stringPixelWidth.default)(truncatedText,{size:fontSize}),i++,!(widthSum>availableWidth)););return truncatedText.length===text.length?text:truncatedText.concat("...")}}},618:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;exports.default=class JspdfUtils{static getCurrentPageNumber(doc){return doc.internal.getCurrentPageInfo().pageNumber}}},620:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;exports.data={head:["Name","Email","Country"],body:[["Caitlin","caitlin@example.com","Sweden"],["Gale","gale@example.com","Norway"],["Roslyn","roslyn@example.com","Australia"],["Reyna","reyna@example.com","Ireland"],["Sheree","sheree@example.com","Germany"],["Mueller","mueller@example.com","United States of America"],["Gray","gray@example.com","Sweden"],["Fitzpatrick","fitzpatrick@example.com","France"]]}},621:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;exports.data={head:["ID","First Name","Last Name","isActive","Balance","Pic","Eye","Company","Mobile","Address","Registered","Lat","long"],body:[["5e7f6b05d51fa2dec288cb76","Caitlin","Warren","true","$2,058.26","http://placehold.it/32x32","brown","ACCUSAGE","+1 (808) 515-3161","509 Crosby Avenue, Vaughn, Kansas, 955","Monday, January 22, 2018 1:23 AM","-17.249615","-46.835228"],["5e7f6b056200837a8407e789","Gale","Trevino","false","$1,122.15","http://placehold.it/32x32","brown","ARTWORLDS","+1 (993) 505-3164","253 Woodside Avenue, Axis, Oregon, 9640","Wednesday, October 17, 2018 1:52 AM","53.959565","-146.836769"],["5e7f6b05f22ab0877fd97af1","Roslyn","Walters","false","$2,646.89","http://placehold.it/32x32","blue","MOTOVATE","+1 (872) 571-3983","143 Johnson Street, Unionville, Utah, 3556","Thursday, September 3, 2015 11:08 AM","-72.995265","-91.715572"],["5e7f6b052d167dfa81aa4d91","Reyna","Mcconnell","false","$2,040.37","http://placehold.it/32x32","green","TASMANIA","+1 (887) 574-2957","459 Rock Street, Century, West Virginia, 9349","Tuesday, February 23, 2016 1:02 PM","82.874305","-27.67473"],["5e7f6b05fca890ce2eded119","Sheree","Head","false","$1,041.42","http://placehold.it/32x32","blue","AVENETRO","+1 (909) 460-2006","367 Ingraham Street, Iberia, Alabama, 9498","Saturday, March 31, 2018 5:09 PM","5.490258","160.018471"],["5e7f6b05a20c8de8ee5763f8","Mueller","Lara","true","$1,233.90","http://placehold.it/32x32","green","LINGOAGE","+1 (936) 405-3775","406 Maple Avenue, Ogema, Arizona, 6368","Wednesday, August 29, 2018 12:00 PM","17.345427","-118.113996"],["5e7f6b053ca6072e9128092e","Gray","Hobbs","true","$3,641.70","http://placehold.it/32x32","blue","BLEENDOT","+1 (874) 518-2603","908 Bragg Court, Barrelville, Puerto Rico, 6492","Friday, January 18, 2019 3:16 PM","48.373691","80.848674"],["5e7f6b05724cdbe0514bd5cb","Fitzpatrick","Lynn","false","$2,283.08","http://placehold.it/32x32","green","COMVEYER","+1 (934) 509-2232","763 Crawford Avenue, Elizaville, Minnesota, 3714","Thursday, August 23, 2018 6:21 PM","-27.774832","-72.615186"],["5e7f6b0571bc15f2814423e3","Raquel","Clements","true","$2,228.23","http://placehold.it/32x32","blue","GEOFARM","+1 (875) 516-2477","263 Clark Street, Bowden, Missouri, 4994","Thursday, September 25, 2014 2:57 PM","-31.048732","110.486609"],["5e7f6b057732c76fefa726e9","Gena","Best","true","$3,483.92","http://placehold.it/32x32","green","WAAB","+1 (888) 577-2186","691 Quentin Road, Falmouth, Guam, 2722","Wednesday, July 26, 2017 11:23 AM","-57.704507","114.873721"],["5e7f6b05df0ef3a4f8665ac8","Melton","Nieves","true","$2,953.04","http://placehold.it/32x32","green","ISOLOGIA","+1 (994) 575-3098","192 Dunham Place, Boykin, California, 8705","Monday, January 1, 2018 9:44 PM","71.287626","-132.169567"],["5e7f6b05f9cac794bca3dd9c","Lolita","Lowery","true","$3,714.83","http://placehold.it/32x32","brown","FROSNEX","+1 (998) 529-3676","531 Seigel Street, Kohatk, Virgin Islands, 2466","Saturday, April 29, 2017 8:16 PM","79.386802","-90.440555"],["5e7f6b052989650ef63a8183","Ora","Byrd","false","$2,883.48","http://placehold.it/32x32","green","VERTON","+1 (801) 535-2501","101 Borinquen Pl, Maxville, Oklahoma, 1893","Wednesday, April 6, 2016 2:17 PM","-84.286169","129.189721"],["5e7f6b055bfbfddd2876ee50","Joni","Morgan","true","$1,567.22","http://placehold.it/32x32","blue","IMMUNICS","+1 (923) 534-3133","987 Gardner Avenue, Frierson, Ohio, 3616","Thursday, July 30, 2015 9:27 AM","-58.686043","-136.97354"],["5e7f6b056eea6d84e7e23c21","Coleman","Johnston","true","$1,576.56","http://placehold.it/32x32","brown","ZYPLE","+1 (910) 486-2191","545 Ide Court, Cornucopia, South Dakota, 5705","Monday, September 18, 2017 6:32 AM","5.87216","-49.04321"],["5e7f6b05c33f2050d1e42792","Celina","Floyd","true","$3,879.16","http://placehold.it/32x32","blue","THREDZ","+1 (886) 477-2958","427 Beadel Street, Hailesboro, Palau, 5987","Tuesday, October 10, 2017 5:12 AM","24.395133","117.743341"],["5e7f6b05c26ab01601c2b6f1","Fulton","Martin","false","$2,458.74","http://placehold.it/32x32","green","GEOFORMA","+1 (892) 440-2521","662 Caton Avenue, Catherine, Tennessee, 9859","Friday, August 11, 2017 4:45 PM","70.808115","159.009424"],["5e7f6b0519da4a2968b816af","Kari","Simpson","true","$2,664.51","http://placehold.it/32x32","green","DOGNOST","+1 (848) 504-2469","986 Harrison Avenue, Marienthal, American Samoa, 3714","Thursday, January 3, 2019 1:07 AM","-59.018926","-2.23301"],["5e7f6b0561431662c60274cb","Pate","Snider","true","$2,908.71","http://placehold.it/32x32","brown","ROCKABYE","+1 (977) 427-3119","704 Bassett Avenue, Trona, New Hampshire, 6171","Thursday, October 16, 2014 5:36 AM","83.729914","-179.683537"],["5e7f6b05e0680f5fb58fec79","Mejia","Boone","true","$2,916.83","http://placehold.it/32x32","brown","MANGLO","+1 (945) 528-2158","331 Amherst Street, Cazadero, Michigan, 3118","Thursday, November 16, 2017 12:45 AM","3.63014","127.806405"],["5e7f6b0508707044d779e3c1","Elliott","Whitfield","true","$2,224.77","http://placehold.it/32x32","green","ESCENTA","+1 (912) 573-2874","172 Erasmus Street, Caroleen, Kentucky, 4728","Sunday, May 22, 2016 11:33 PM","-41.282858","-5.448129"],["5e7f6b0558c1649cb3d086eb","Leann","Campos","true","$1,996.60","http://placehold.it/32x32","green","ZENTIA","+1 (925) 581-2052","485 Keen Court, Fredericktown, New York, 5881","Wednesday, June 1, 2016 2:11 PM","59.583771","44.60703"],["5e7f6b05db3a72d603b9c67c","Carson","Mcintosh","true","$2,541.03","http://placehold.it/32x32","brown","CORPULSE","+1 (833) 473-2017","565 Hendrickson Place, Condon, Colorado, 9711","Friday, March 13, 2020 7:23 PM","59.597487","2.171501"],["5e7f6b054f6d9d0995657a64","Kemp","Higgins","false","$3,161.87","http://placehold.it/32x32","green","BRISTO","+1 (855) 496-2074","942 Guider Avenue, Westwood, North Carolina, 6284","Sunday, December 15, 2019 1:05 PM","-73.52574","-127.266828"],["5e7f6b05ca9f33695f01ea7c","Morrow","Duke","false","$1,033.21","http://placehold.it/32x32","blue","EVENTEX","+1 (903) 409-3475","760 Bayview Place, Brethren, Connecticut, 1306","Monday, March 20, 2017 4:01 PM","-16.726793","-83.187991"],["5e7f6b05d811e540c725d561","Sheri","Marquez","true","$3,219.97","http://placehold.it/32x32","blue","FILODYNE","+1 (889) 400-3703","467 Garden Place, Alfarata, Vermont, 3965","Friday, January 10, 2020 7:29 AM","88.774245","-148.70871"],["5e7f6b05329c89dd51984024","Ana","Daniel","true","$2,395.23","http://placehold.it/32x32","blue","ZAPHIRE","+1 (955) 547-2797","945 Doughty Street, Talpa, North Dakota, 8939","Monday, July 14, 2014 12:00 PM","26.487813","-67.994783"],["5e7f6b058fcb768e549a54b9","Vasquez","Mosley","true","$3,290.34","http://placehold.it/32x32","green","EXTREMO","+1 (995) 467-2130","296 Elliott Place, Gardners, Virginia, 8347","Monday, September 3, 2018 8:31 PM","-37.89267","78.007837"],["5e7f6b05d4759d62528c2ea0","Jennifer","Osborn","false","$3,316.66","http://placehold.it/32x32","blue","EARWAX","+1 (896) 560-2968","653 Dover Street, Gilgo, Hawaii, 7334","Friday, March 13, 2020 4:53 PM","-77.278439","121.102735"],["5e7f6b053f995a9e31513f6b","Noemi","Huffman","false","$2,249.93","http://placehold.it/32x32","blue","NEXGENE","+1 (831) 539-3838","440 Hanson Place, Wright, Georgia, 6804","Sunday, March 15, 2015 4:47 AM","65.120319","-149.368651"],["5e7f6b055100a8a77148670f","Lorna","Downs","true","$2,693.94","http://placehold.it/32x32","blue","PORTICA","+1 (906) 559-2961","611 Woodrow Court, Kimmell, Illinois, 2047","Saturday, October 19, 2019 1:00 PM","-83.905648","82.439963"],["5e7f6b051365c3c0a12f2e34","Christian","Good","true","$3,743.00","http://placehold.it/32x32","green","EARBANG","+1 (985) 555-2195","263 Dobbin Street, Fontanelle, Rhode Island, 6514","Saturday, May 23, 2015 6:41 AM","45.218714","57.559041"],["5e7f6b05122c99c74b332986","Chen","Blevins","false","$2,808.64","http://placehold.it/32x32","brown","ZILLACOM","+1 (800) 489-2606","800 Vanderbilt Avenue, Sussex, Delaware, 2431","Wednesday, August 5, 2015 8:58 PM","34.550281","-20.982171"],["5e7f6b05464ff4884dfedf9a","Yesenia","Short","false","$1,476.43","http://placehold.it/32x32","green","COMVEY","+1 (859) 575-3906","431 Trucklemans Lane, Dixie, Federated States Of Micronesia, 7713","Monday, February 3, 2020 2:38 AM","7.634502","-162.139473"],["5e7f6b05f8fa52850effac04","Sondra","Roman","false","$2,170.59","http://placehold.it/32x32","green","GENMY","+1 (889) 522-2549","373 Kossuth Place, Cascades, District Of Columbia, 1109","Monday, October 30, 2017 8:58 AM","61.436173","79.268311"],["5e7f6b0537965f52f8726c4e","Mccoy","Morrow","true","$2,908.40","http://placehold.it/32x32","brown","SINGAVERA","+1 (824) 527-2027","182 Ash Street, Carlton, Nevada, 9196","Saturday, September 8, 2018 6:34 AM","54.525963","-30.209822"],["5e7f6b0515e5b26cafaad789","Patsy","Simon","true","$3,816.26","http://placehold.it/32x32","brown","NETPLAX","+1 (892) 546-3357","434 Carroll Street, Emerald, Wyoming, 1401","Thursday, November 8, 2018 5:06 PM","-68.535753","113.095902"],["5e7f6b05f6817ef4d1f70781","Chase","Joseph","false","$3,388.40","http://placehold.it/32x32","brown","TETRATREX","+1 (954) 425-2264","313 Grand Avenue, Reno, Idaho, 2963","Sunday, October 23, 2016 4:44 PM","-26.145408","-19.71151"],["5e7f6b0528b198df00a125cd","Blanchard","Bates","true","$1,482.73","http://placehold.it/32x32","blue","ORBIFLEX","+1 (826) 447-3672","302 Lloyd Court, Greensburg, Massachusetts, 3167","Saturday, August 11, 2018 5:15 PM","-21.11937","123.433701"],["5e7f6b054e7e8786bca5b7b9","May","David","true","$2,125.33","http://placehold.it/32x32","green","BOINK","+1 (993) 484-2179","993 Delmonico Place, Tedrow, Mississippi, 7236","Monday, October 29, 2018 10:46 AM","41.725724","-88.898785"],["5e7f6b05d9a669b001980280","Merritt","Stuart","false","$3,588.89","http://placehold.it/32x32","brown","FLEXIGEN","+1 (945) 421-3621","685 Holt Court, Cresaptown, Indiana, 464","Thursday, September 7, 2017 10:50 PM","20.348204","122.796394"],["5e7f6b051dacbd188133bc44","Maxine","Elliott","false","$1,651.87","http://placehold.it/32x32","brown","MALATHION","+1 (947) 488-2160","970 Hunts Lane, Enlow, Alaska, 4757","Sunday, September 4, 2016 3:18 AM","-86.544483","-177.167012"],["5e7f6b05219369c73593a1b0","Loretta","Skinner","false","$3,042.51","http://placehold.it/32x32","blue","ENTALITY","+1 (998) 553-2356","948 Kimball Street, Edgar, Arkansas, 6644","Friday, November 10, 2017 7:29 AM","84.773706","162.482402"],["5e7f6b05a43bdb29398f4121","Cathryn","Leon","false","$1,180.70","http://placehold.it/32x32","blue","SULFAX","+1 (992) 597-3893","120 Perry Terrace, Lutsen, Louisiana, 5789","Friday, February 26, 2016 9:27 AM","38.925265","-2.583038"],["5e7f6b05aadc7240fa9627da","Sally","Ray","true","$2,353.15","http://placehold.it/32x32","brown","SONGBIRD","+1 (931) 470-3354","413 Huntington Street, Trail, Northern Mariana Islands, 9704","Friday, October 12, 2018 12:58 AM","-52.430222","-54.801642"],["5e7f6b0543e5fdd88c6580b4","Cherie","Henson","true","$1,425.49","http://placehold.it/32x32","green","GRUPOLI","+1 (876) 543-2946","992 Hendrix Street, Rosburg, Iowa, 7252","Wednesday, April 20, 2016 1:08 AM","-76.049031","87.650858"],["5e7f6b05246a19e47ddfe782","Loraine","Lewis","true","$1,670.37","http://placehold.it/32x32","blue","ZILLIDIUM","+1 (814) 570-2125","175 Willow Street, Kieler, Wisconsin, 1360","Wednesday, July 30, 2014 1:45 PM","5.602698","-88.810675"],["5e7f6b05de514e4fbafc29dc","Charlotte","Pearson","true","$3,036.32","http://placehold.it/32x32","brown","ZENSUS","+1 (840) 412-2054","783 Humboldt Street, Silkworth, Marshall Islands, 9750","Monday, December 30, 2019 12:56 PM","34.93962","-53.105491"],["5e7f6b057b5c963ff79bfd28","Valentine","Bowman","true","$3,888.06","http://placehold.it/32x32","green","COMTOURS","+1 (898) 411-3559","916 Hooper Street, Gasquet, Florida, 7983","Sunday, July 5, 2015 4:25 PM","-53.884641","-116.654411"],["5e7f6b05b448d7b2c615968e","Earlene","Munoz","true","$1,439.40","http://placehold.it/32x32","blue","GENMEX","+1 (911) 401-2368","862 Pine Street, Freetown, Montana, 665","Friday, April 21, 2017 8:16 PM","33.092402","54.942563"],["5e7f6b0595b804048f8298b2","Freida","Lawrence","false","$2,390.46","http://placehold.it/32x32","green","APEXTRI","+1 (800) 561-3903","199 Lafayette Avenue, Noblestown, Nebraska, 8389","Friday, July 6, 2018 3:23 AM","-20.156363","49.772657"],["5e7f6b05cf81e21d32bf85c7","Katina","Santana","true","$1,374.32","http://placehold.it/32x32","green","EXOSTREAM","+1 (965) 465-3561","382 Charles Place, Cliffside, New Jersey, 6619","Friday, January 24, 2014 9:57 AM","-88.043333","81.005857"],["5e7f6b05f7bfd9ce96ef91df","Trina","Pittman","true","$1,426.52","http://placehold.it/32x32","brown","VISUALIX","+1 (974) 480-3354","962 Summit Street, Riceville, Pennsylvania, 7825","Thursday, July 26, 2018 10:51 AM","28.785885","-143.936064"],["5e7f6b05b0c4b7d02a1e7756","Jody","Roy","true","$3,858.74","http://placehold.it/32x32","blue","SHADEASE","+1 (968) 485-3155","492 Onderdonk Avenue, Grill, Maryland, 2325","Saturday, June 13, 2015 5:51 AM","54.986351","134.706774"],["5e7f6b05640bc5857b416ccc","Haynes","Lancaster","true","$1,340.41","http://placehold.it/32x32","blue","GALLAXIA","+1 (962) 566-2873","905 Chester Avenue, Layhill, New Mexico, 287","Saturday, November 18, 2017 12:47 AM","71.596473","162.164144"],["5e7f6b0544141635218315a0","Jacqueline","Sweet","false","$2,350.83","http://placehold.it/32x32","blue","EARTHPLEX","+1 (943) 466-3314","678 Montieth Street, Gilmore, Washington, 2023","Monday, September 25, 2017 2:38 PM","-49.374451","-109.243678"],["5e7f6b058f10c414dbf64b6f","Paul","Puckett","false","$2,443.00","http://placehold.it/32x32","brown","ESCHOIR","+1 (855) 591-2255","254 Prince Street, Kraemer, South Carolina, 2093","Sunday, February 26, 2017 12:37 PM","78.423851","-39.242129"],["5e7f6b05196cfee91d30aa16","Fanny","Pace","true","$2,575.35","http://placehold.it/32x32","blue","KENEGY","+1 (979) 459-3304","897 Jefferson Avenue, Yonah, Maine, 5315","Thursday, October 13, 2016 8:40 PM","87.377681","-129.543298"],["5e7f6b057444e61986988b7b","Miriam","Mills","true","$1,466.03","http://placehold.it/32x32","green","IMANT","+1 (817) 539-3858","522 Congress Street, Turpin, Kansas, 9623","Wednesday, December 23, 2015 8:33 PM","85.281788","34.459688"],["5e7f6b0592fa08e6e06145a1","Magdalena","Holloway","false","$3,228.23","http://placehold.it/32x32","green","TUBALUM","+1 (917) 585-3454","617 Irving Place, Cashtown, Oregon, 2127","Sunday, July 1, 2018 9:30 AM","65.20408","-70.581941"],["5e7f6b05e91b5925f06c7f06","Denise","Woodard","false","$1,167.11","http://placehold.it/32x32","green","TERASCAPE","+1 (944) 456-2454","407 Berriman Street, Katonah, Utah, 2902","Sunday, January 17, 2016 2:32 AM","45.303233","29.903534"],["5e7f6b05e63a5b3016125f40","Livingston","Hurley","true","$3,972.72","http://placehold.it/32x32","brown","ENVIRE","+1 (919) 475-2763","707 School Lane, Sunbury, West Virginia, 8251","Saturday, March 3, 2018 7:49 PM","-33.282236","104.747048"],["5e7f6b05ee63f13fbe0c54f2","Thelma","Rowland","false","$3,967.84","http://placehold.it/32x32","green","NETERIA","+1 (953) 552-3800","673 Rockaway Parkway, Nanafalia, Alabama, 759","Friday, November 27, 2015 3:56 PM","-63.323331","-89.870685"],["5e7f6b050f54cf403f5078bf","Byrd","Jones","false","$2,760.36","http://placehold.it/32x32","blue","POLARIA","+1 (921) 541-2363","632 Newel Street, Masthope, Arizona, 9932","Sunday, January 19, 2014 7:52 AM","22.568738","64.099267"],["5e7f6b05b54712b69e576327","Josephine","Freeman","true","$1,747.46","http://placehold.it/32x32","green","PURIA","+1 (802) 428-3191","118 Erskine Loop, Wanship, Puerto Rico, 6706","Friday, November 24, 2017 10:39 AM","-63.437633","157.569192"],["5e7f6b05fcbcb7acf188b605","Bradford","Gilmore","true","$3,279.05","http://placehold.it/32x32","blue","ACRUEX","+1 (986) 599-3172","263 Irving Avenue, Churchill, Minnesota, 4465","Saturday, November 7, 2015 3:57 AM","-73.106232","-133.04639"],["5e7f6b050dfb20081215adf5","Manuela","Nielsen","false","$2,123.65","http://placehold.it/32x32","brown","PORTALINE","+1 (801) 454-2976","561 Harbor Court, Roosevelt, Missouri, 1432","Tuesday, October 17, 2017 2:53 PM","-19.841526","-78.960736"],["5e7f6b05c5933308cc6c74fd","Sonja","May","true","$3,357.49","http://placehold.it/32x32","blue","CUBICIDE","+1 (905) 408-3182","572 Bancroft Place, Murillo, Guam, 7688","Sunday, September 1, 2019 2:13 AM","-25.026508","-151.53723"],["5e7f6b0530b5aaaa1ab445a5","Sara","Chambers","false","$3,599.20","http://placehold.it/32x32","blue","ECOSYS","+1 (906) 429-2095","812 Boerum Street, Greenwich, California, 8109","Tuesday, June 24, 2014 5:14 AM","-3.252421","172.124281"],["5e7f6b05e162a97ef1fa21a3","Tucker","Park","false","$2,468.11","http://placehold.it/32x32","brown","ARTIQ","+1 (942) 517-2177","794 Whitney Avenue, Bentley, Virgin Islands, 3386","Friday, August 7, 2015 2:35 AM","2.356748","87.672809"],["5e7f6b056444900379ad02d1","Elma","Norman","true","$1,702.65","http://placehold.it/32x32","brown","ZILODYNE","+1 (968) 568-2168","124 Crown Street, Grandview, Oklahoma, 6040","Monday, July 18, 2016 2:51 PM","40.71106","128.912181"],["5e7f6b053afd4cffe3b542dd","Dejesus","Diaz","false","$2,424.84","http://placehold.it/32x32","brown","NSPIRE","+1 (973) 477-2901","595 Gerritsen Avenue, Dola, Ohio, 1562","Sunday, April 26, 2015 5:59 PM","-78.37372","71.585917"],["5e7f6b057b691af7b658de62","Gertrude","Burris","false","$1,674.48","http://placehold.it/32x32","blue","EMERGENT","+1 (963) 529-2256","847 Dank Court, Staples, South Dakota, 5913","Wednesday, January 18, 2017 11:35 PM","-50.957388","-94.355758"],["5e7f6b05605bfb6d9c33c773","Alexandra","Carlson","true","$1,183.52","http://placehold.it/32x32","brown","SONIQUE","+1 (969) 530-3064","616 Johnson Avenue, Brule, Palau, 4470","Thursday, April 2, 2015 8:03 AM","15.79634","26.769853"],["5e7f6b050d528b4eff95a2cd","Guzman","Burks","false","$1,899.89","http://placehold.it/32x32","blue","OPTICALL","+1 (816) 494-3574","368 Juliana Place, Canby, Tennessee, 9680","Tuesday, November 17, 2015 10:12 AM","-3.885488","-149.266606"],["5e7f6b05fcb94a76d87f5c79","Navarro","Randall","true","$3,920.81","http://placehold.it/32x32","brown","ZEPITOPE","+1 (986) 520-2609","897 Elm Avenue, Hoagland, American Samoa, 3599","Monday, December 11, 2017 10:27 PM","72.610974","17.411667"],["5e7f6b054b210b253a6cfff8","Randi","Mendoza","true","$2,653.13","http://placehold.it/32x32","blue","MEDCOM","+1 (965) 408-3040","580 Bayard Street, Lacomb, New Hampshire, 1487","Tuesday, December 4, 2018 2:06 AM","-49.937166","131.961345"],["5e7f6b05a9677aeb0774817a","Wilder","Berger","true","$2,714.59","http://placehold.it/32x32","green","ISOLOGICS","+1 (965) 440-3612","742 Columbia Place, Echo, Michigan, 9861","Sunday, December 21, 2014 6:21 PM","-72.629242","20.387647"],["5e7f6b0564a61018ec5c2e39","Aida","Cantu","false","$3,117.60","http://placehold.it/32x32","green","MEDMEX","+1 (864) 558-3397","122 Montague Street, Toftrees, Kentucky, 363","Thursday, November 9, 2017 1:22 AM","47.921144","63.062961"],["5e7f6b0541ab714a851b44f8","Lynch","Lamb","true","$3,677.84","http://placehold.it/32x32","brown","ZIORE","+1 (958) 519-3418","777 Underhill Avenue, Fowlerville, New York, 1197","Saturday, June 23, 2018 11:47 AM","19.230945","-32.474363"],["5e7f6b05e534c56eee189f4d","Allyson","Witt","false","$3,154.85","http://placehold.it/32x32","brown","INCUBUS","+1 (939) 550-2772","626 Wilson Avenue, Carrizo, Colorado, 1871","Saturday, March 17, 2018 4:54 PM","84.373102","-162.904664"],["5e7f6b05aa69e6ac230754b6","Meredith","Small","false","$3,606.53","http://placehold.it/32x32","green","GRACKER","+1 (872) 402-2055","465 Baycliff Terrace, Derwood, North Carolina, 2354","Tuesday, April 3, 2018 11:29 PM","-79.216917","14.485901"],["5e7f6b050cee1d7cd210592d","Hartman","Glenn","true","$3,421.82","http://placehold.it/32x32","blue","MEDIFAX","+1 (841) 464-3986","571 Neptune Court, Johnsonburg, Connecticut, 4938","Thursday, April 3, 2014 5:24 PM","-39.206808","3.915478"],["5e7f6b052d41436ee658bbbe","Kristi","Patterson","true","$1,881.23","http://placehold.it/32x32","blue","FURNITECH","+1 (971) 565-3554","175 Terrace Place, Herbster, Vermont, 3480","Thursday, May 5, 2016 4:55 AM","65.075341","-26.814032"],["5e7f6b053abd635192a003eb","Sheila","Kirk","true","$3,322.64","http://placehold.it/32x32","brown","ULTRIMAX","+1 (904) 496-3295","174 Lenox Road, Terlingua, North Dakota, 3463","Tuesday, May 16, 2017 6:23 AM","56.773597","116.938297"],["5e7f6b0502cc2f44d2bea60d","Stella","Foreman","false","$1,230.27","http://placehold.it/32x32","brown","ULTRASURE","+1 (869) 453-3801","462 Lott Street, Magnolia, Virginia, 8065","Wednesday, September 20, 2017 7:08 AM","-20.465479","-46.058822"],["5e7f6b05b9d5675fbff43caa","Gould","Paul","false","$1,846.54","http://placehold.it/32x32","brown","CABLAM","+1 (863) 544-3458","280 Douglass Street, Navarre, Hawaii, 3658","Tuesday, February 24, 2015 5:41 PM","-80.782447","-76.612663"],["5e7f6b05b469da2e2afd9b99","Ladonna","Russo","false","$3,028.14","http://placehold.it/32x32","brown","COLUMELLA","+1 (975) 551-3153","817 Elizabeth Place, Deseret, Georgia, 8989","Sunday, September 11, 2016 1:54 PM","29.853214","25.245393"],["5e7f6b05a9dd64148d4d7c63","Molly","Meadows","false","$1,405.47","http://placehold.it/32x32","blue","DAYCORE","+1 (899) 408-2998","647 Varick Avenue, Outlook, Illinois, 332","Monday, February 2, 2015 3:47 AM","-5.051463","60.625106"],["5e7f6b05b2d860fb10efef4e","Wynn","Hogan","false","$2,239.21","http://placehold.it/32x32","brown","CENTURIA","+1 (881) 540-3465","722 Abbey Court, Marshall, Rhode Island, 6859","Friday, June 6, 2014 12:18 AM","-87.679925","113.950029"],["5e7f6b05e38a9b9caa3c9619","Veronica","Ayala","false","$2,379.67","http://placehold.it/32x32","green","MAGMINA","+1 (985) 571-3977","595 Independence Avenue, Walker, Delaware, 772","Monday, August 12, 2019 11:45 PM","-82.2834","155.372958"],["5e7f6b05c4b06a8082e86938","Tara","Stevenson","false","$3,433.75","http://placehold.it/32x32","brown","COGENTRY","+1 (827) 429-2311","703 King Street, Chloride, Federated States Of Micronesia, 135","Friday, February 10, 2017 12:27 PM","-83.109868","-175.602103"],["5e7f6b05f76b0ff75c339920","Hensley","Dalton","false","$1,723.02","http://placehold.it/32x32","brown","OBONES","+1 (839) 409-2508","842 Glenmore Avenue, Blende, District Of Columbia, 3951","Sunday, January 7, 2018 9:54 AM","-51.966731","18.481449"],["5e7f6b05f1a44e064aff7942","Lucas","Riggs","true","$1,678.72","http://placehold.it/32x32","blue","EMPIRICA","+1 (825) 582-3471","480 Conduit Boulevard, Sunnyside, Nevada, 3890","Sunday, April 6, 2014 5:00 AM","-24.13771","73.710231"],["5e7f6b0586d112a077879371","Alisa","Byers","true","$3,348.64","http://placehold.it/32x32","brown","ATGEN","+1 (908) 540-2910","918 Friel Place, Broadlands, Wyoming, 3526","Sunday, April 24, 2016 10:26 PM","0.269583","-106.077209"],["5e7f6b05f420c9a52b248fb4","Zamora","Wood","true","$3,529.17","http://placehold.it/32x32","brown","INSECTUS","+1 (891) 409-3426","252 Bowery Street, Edinburg, Idaho, 4529","Monday, February 10, 2020 10:52 AM","-24.60214","108.644212"],["5e7f6b05e39c10632b71b93e","Knowles","Hurst","false","$1,480.87","http://placehold.it/32x32","green","VENDBLEND","+1 (939) 471-3581","654 Cass Place, Somerset, Massachusetts, 1231","Saturday, March 30, 2019 3:29 PM","-43.996672","-54.910483"],["5e7f6b05d200a86c07a4f07e","Suarez","Hyde","false","$1,548.90","http://placehold.it/32x32","green","SHEPARD","+1 (993) 515-3178","608 Elm Place, Loma, Mississippi, 6798","Monday, August 20, 2018 5:36 PM","69.964225","159.945329"],["5e7f6b05fc2b5670f4647ebf","Shauna","Ramirez","true","$2,781.06","http://placehold.it/32x32","brown","SLUMBERIA","+1 (837) 442-3841","570 Wortman Avenue, Elliston, Indiana, 7723","Thursday, November 24, 2016 1:21 PM","-54.372272","-29.797549"],["5e7f6b05664828c7b6837888","Gentry","Sullivan","false","$2,588.81","http://placehold.it/32x32","green","KOZGENE","+1 (970) 549-3432","842 McKinley Avenue, Hackneyville, Alaska, 5757","Wednesday, December 19, 2018 11:15 PM","-12.662682","86.874567"]]}},622:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;exports.data={head:["ID","Mesage","Sender"],body:[["5e7f6b05d51fa2dec288cb76","Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lacus quam, sagittis vitae lobortis ut, feugiat sed justo. In scelerisque nibh quis magna dignissim, in.","Warren"]]}},623:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;exports.data={head:["Name","Email","Country"],body:[["Caitlin","caitlin@example.com","Sweden"],["Gale","gale@example.com","Norway"],[{text:"Giridharan",background:"#3F51B4",color:"#FFFFFF"},{text:"giridharan@gmail.com",background:"#FFFFFF",color:"#333333"},{text:"India",background:"#FFFFFF",color:"#333333"}],["Roslyn","roslyn@example.com","Australia"],["Reyna","reyna@example.com",{text:"Ireland",background:"#F24436",color:"#FFFFFF"}],["Sheree","sheree@example.com","Germany"],["Mueller","mueller@example.com","United States of America"],["Gray",{text:"gray@example.com",background:"#FFFFFF",color:"#FBC02D"},"Sweden"],["Fitzpatrick","fitzpatrick@example.com","France"]]}}},[[268,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,